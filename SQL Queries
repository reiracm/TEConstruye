GO
USE TEConstruye
GO

/** Shows Employee's table information **/
CREATE PROCEDURE _usp_employees_table
AS
SELECT *
FROM EMPLOYEE
GO;

/** Shows Client's table information **/
CREATE PROCEDURE _usp_clients_table
AS
SELECT *
FROM CLIENT
GO;

/** Shows Project's table information **/
CREATE PROCEDURE _usp_projects_table
AS
SELECT *
FROM PROJECT
GO;

/** Shows Purchase's table information **/
CREATE PROCEDURE _usp_purchases_table
AS
SELECT *
FROM PURCHASE
GO;


/** Shows Stage's table information **/
CREATE PROCEDURE _usp_stages_table
AS
SELECT *
FROM STAGE
GO;

/** Shows Material's table information **/
CREATE PROCEDURE _usp_materials_table
AS
SELECT *
FROM MATERIAL
GO;

/** Shows Stages per project information **/
CREATE PROCEDURE _usp_stages_per_project_table
AS
SELECT *
FROM STAGES_PER_PROJECT
GO;

/** Shows Phone's table information **/
CREATE PROCEDURE _usp_phones_table
AS
SELECT *
FROM PHONES
GO;

/** Shows Role's table information **/
CREATE PROCEDURE _usp_roles_table
AS
SELECT *
FROM ROLE_
GO;

/** Shows which employees work on each project **/
CREATE PROCEDURE _usp_works_on_table
AS
SELECT *
FROM WORKS_ON
GO;

/** Shows Manager's table information **/
CREATE PROCEDURE _usp_manages_table
AS
SELECT *
FROM MANAGES
GO;

/** Shows Roles per employee information **/
CREATE PROCEDURE _usp_roles_per_employee_table
AS
SELECT *
FROM ROLE_PER_EMPLOYEE
GO

/** Shows Materials per stage information **/
CREATE PROCEDURE _usp_materials_per_stage_table
AS
SELECT *
FROM MATERIAL_PER_STAGE
GO

/** Shows Each employee and each role information **/

CREATE PROCEDURE _usp_employees_and_roles 
AS
SELECT EMPLOYEE.ID, EMPLOYEE.Name_ , EMPLOYEE.FName, ROLE_.Name_
FROM EMPLOYEE
	INNER JOIN ROLE_ ON  EMPLOYEE.IDRole = ROLE_.ID
ORDER BY EMPLOYEE.IDRole
GO



/** Shows Materials and costs per project, per stage **/
CREATE PROCEDURE _usp_materials_and_costs_per_project_per_stage @Project_num INT
AS
SELECT STAGES_PER_PROJECT.IDStage, MATERIAL_PER_STAGE.CodeMaterial, MATERIAL_PER_STAGE.Quantity, PURCHASE.Price
FROM STAGES_PER_PROJECT
	INNER JOIN MATERIAL_PER_STAGE ON STAGES_PER_PROJECT.IDStage = MATERIAL_PER_STAGE.IDStage
	INNER JOIN PURCHASE ON STAGES_PER_PROJECT.IDStage = PURCHASE.IDStage
WHERE STAGES_PER_PROJECT.IDProject=@Project_num
ORDER BY STAGES_PER_PROJECT.IDProject
GO

/** Shows Employees who work on Project **/
CREATE PROCEDURE _usp_employee_Information_per_project @Project_Num INT
AS
SELECT EMPLOYEE.ID, EMPLOYEE.Name_ , EMPLOYEE.LName
FROM EMPLOYEE, WORKS_ON
WHERE WORKS_ON.IDProject = @Project_Num
GO

/** Salaries per employee**/

CREATE PROCEDURE _usp_salary_employee_1 @ID INT, @Project INT
AS
SELECT  EMPLOYEE.ID , EMPLOYEE.Name_, EMPLOYEE.Hourly_pay, WORKS_ON.Hours_
FROM EMPLOYEE
	INNER JOIN WORKS_ON ON EMPLOYEE.ID = WORKS_ON.IDEmployee
WHERE EMPLOYEE.ID = @ID AND WORKS_ON.IDProject = @Project
GO
 
 /**Ticket per project **/
CREATE PROCEDURE _usp_shopping @Project_num INT
AS
SELECT PURCHASE.ID, PURCHASE.Date_, PURCHASE.Amount, PURCHASE.Price
FROM PURCHASE
WHERE PURCHASE.IDProject= @Project_num
GO


EXECUTE _usp_employees_table;

EXECUTE _usp_clients_table;

EXECUTE _usp_projects_table;

EXECUTE _usp_purchases_table;

EXECUTE _usp_stages_table;

EXECUTE _usp_materials_table;

EXECUTE _usp_stages_per_project_table;

EXECUTE _usp_phones_table;

EXECUTE _usp_roles_table;

EXECUTE _usp_works_on_table;

EXECUTE _usp_manages_table;

EXECUTE _usp_roles_per_employee_table;

EXECUTE _usp_materials_per_stage_table;

EXECUTE _usp_employees_and_roles;

EXECUTE _usp_materials_and_costs_per_project_per_stage @Project_num=1;

EXECUTE _usp_employee_Information_per_project @Project_Num=2;

EXECUTE _usp_salary_employee_1 @ID=8,@Project=1;

EXECUTE _usp_shopping @Project_num=2;
